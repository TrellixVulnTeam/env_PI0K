run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -d' ' -f2 | -d'-' -f2)"

# Configure your default shell
set -g default-shell $SHELL

# Bindings {{{

# remap prefix from 'C-b' to 'C-j'
unbind C-b
set-option -g prefix C-j
bind-key C-j send-prefix

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# choose a new binding for last-window because using l for pane navigation
bind b last-window

# open new windows in the current path
bind c new-window -c "#{pane_current_path}"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

bind > swap-pane -D         # swap current pane with the next one
bind < swap-pane -U         # swap current pane with the previous one

bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# switch panes using Shift-arrow without prefix
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

#tab like window switching (-n: no prior escape seq)
bind -n C-down new-window
bind -n C-left prev
bind -n C-right next

unbind [    # paste-buffer
unbind ]
unbind p # previous-window
unbind "#"  # list-buffer
unbind = # choose-buffer

bind p paste-buffer
bind C-p choose-buffer

# trigger copy mode by
bind -n M-Up copy-mode

# Vim like copy mode
#bind-key -T copy-mode-vi v              send-keys -X begin-selection
#bind -T copy-mode-vi M-Up               send-keys -X scroll-up
#bind -T copy-mode-vi M-Down             send-keys -X scroll-down
#bind -T copy-mode-vi M-PageUp           send-keys -X halfpage-up
#bind -T copy-mode-vi M-PageDown         send-keys -X halfpage-down
#bind -T copy-mode-vi PageDown           send-keys -X page-down
#bind -T copy-mode-vi PageUp             send-keys -X page-up

set-option -g mouse on
# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane        select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane      select-pane \; send-keys -X -N 2 scroll-down
# Enable below for tmux 2.1+
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

#set -g @copy_use_osc52_fallback on
#yank="~/.tmux/yank.sh"
## Copy selected text
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
#bind -T copy-mode-vi Y send-keys -X copy-line \;\
#    run "tmux save-buffer - | $yank"
#bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
#    run "tmux save-buffer - | $yank"
#bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
#bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
#set -g @plugin 'tmux-plugins/tmux-sensible'
#    run "tmux save-buffer - | $yank"

if-shell -b 'test $(uname) = "Linux"' 'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'
if-shell -b 'test $(uname) = "Darwin"' 'bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"'


# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
set -g @plugin 'tmux-plugins/tmux-sensible'
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
send-keys -X clear-selection

# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external

# clear both screen and history
bind -n C-k send-keys C-l \; run 'sleep 0.1' \; clear-history

# Use '+' to toggle zoom
#unbind z # zoom-pane
#bind + resize-pane -Z

# Kill pane/window/session
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# }}}

# Settings {{{

set -g default-terminal "screen-256color"
set -g terminal-overrides "xterm*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@"
setw -g xterm-keys on                   # xterm-style function key sequences
set-option -g destroy-unattached off
set-option -g detach-on-destroy on

set -g @plugin 'tmux-plugins/tmux-sensible'
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -wg mouse-select-pane on; set -wg mode-mouse on; \
    set -wg mouse-resize-pane on; set -wg mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -wg mouse on"

set -sg escape-time 1                   # faster command sequences
set -sg repeat-time 600                 # increase repeat timeout
set -g history-limit 10000              # boost history
set -g base-index 1                     # start with window 1 (instead of 0)
set -g pane-base-index 1                # start with pane 1
set -g renumber-windows on              # renumber windows when a window is closed
setw -g allow-rename off
setw automatic-rename off               # rename windows automatically
set -g remain-on-exit off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# enable vi mode keys
setw -g mode-keys vi

set -g set-clipboard 'on'

# Terminal emulator window titles
set -g set-titles on
set -g set-titles-string "#I: #W"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
#if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
#  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# loud or quiet?
set-option -g visual-activity on
set -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g visual-bell off
set-option -g visual-silence off
setw -g monitor-activity off
set-option -g bell-action none

# messages
set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

set -g display-panes-time 4000

set -g focus-events on

# }}}

# Window/Pane Appearance {{{

#  modes
setw -g clock-mode-colour colour5
setw -g mode-attr bold
setw -g mode-fg colour1
setw -g mode-bg colour0

# pane border
set -g pane-border-bg colour0
set -g pane-border-fg colour14
set -g pane-active-border-bg colour0
set -g pane-active-border-fg colour11

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# statusbar
set -g status-position bottom
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g status-justify centre
set -g status-keys vi
set -g status-interval 1        # redraw status line every 10 seconds
set -g status-style fg=colour136,bg=colour235
set -g status-attr dim

set -g status-left-length 40
set -g status-left-style default

set -g status-right-style default
set -g status-right-length 140

setw -g window-status-current-fg colour0
setw -g window-status-current-bg colour6
setw -g window-status-current-attr bold
setw -g window-status-current-format ' [#I] #W #[fg=colour9]#F '

setw -g window-status-fg colour45
setw -g window-status-bg colour0
setw -g window-status-attr bold
setw -g window-status-format ' [#I] #W #[fg=colour9]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }}}

# If OSX {{{

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux-linux.conf'

# Plugins Configuration {{{

set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'

set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'

# Change key bindings for resurrect
#set -g @resurrect-save 'S'
#set -g @resurrect-restore 'R'
#set -g @resurrect-strategy-vim 'session' # Resurrect vim sessions
#set -g @resurrect-capture-pane-contents 'on' # Restore pane contents
#set -g @resurrect-save-shell-history 'on' # Restore shell history

# Automatic restore
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '10'

# Emulate scrolling for "full-screen", alternate buffer programs, such as less, man, or vi
#set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# Tmux tasks
# Task manager
#set -g @tasks_manager 'taskwarrior'

# Colors
#set -g @tasks_format_begin '#[fg=white,bg=colour236]'
#set -g @tasks_format_end '#[fg=white,bg=black]'

# Icons
#set -g @tasks_icon_urgent 'â§— '
#set -g @tasks_icon_outstanding '+'

# ============================
# ===       Plugins        ===
# ============================

set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @plugin 'tmux-plugins/tmux-online-status'
#set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
#set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'chriszarate/tmux-tasks'
set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
#set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'NHDaly/tmux-better-mouse-mode'
set -g @plugin 'arl/tmux-gitbar'

TMUX_GITBAR_DIR="/home/kshah/.tmux/plugins/tmux-gitbar"
source-file "/home/kshah/.tmux/plugins/tmux-gitbar/tmux-gitbar.tmux"

# Plugin properties
#set -g @sidebar-tree 't'
#set -g @sidebar-tree-focus 'T'
#set -g @sidebar-tree-command 'tree -C'

set -g @open-S 'https://www.google.com/search?q='

##############################
#### Plugins Configuration ###
##############################


run '~/.tmux/plugins/tpm/tpm'

# }}}
